{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello! I\u2019m Mahendra Pawar , Lighting Technical Supervisor with over 7 years of experience at DNEG, one of the world\u2019s leading visual effects studios. I'm a technical problem solver passionate about tool development, workflow automation, and creative pipeline enhancements. I specialize in building scalable solutions that empower teams and streamline challenging processes. \ud83d\ude80 What I Do Tool Development : Design and deploy automation tools using Python and APIs for platforms like Houdini/Solaris, making day-to-day work more efficient for artists and technical teams. Workflow Automation : Constantly seek ways to simplify and optimize creative and technical pipelines\u2014reducing manual steps, minimizing errors, and scaling productivity. Technical Support/Problem-solving : Serve as a go-to resource for diagnosing and resolving complex technical issues across active shows and projects, ensuring smooth deliveries and happy teams. \ud83d\udca1 Current Interests Automating creative and technical workflows Exploring API integrations for next-generation pipeline tools Building robust systems for the animation, VFX and IT industry \ud83c\udf31 Goals & Aspirations Expand my expertise from animation into the broader IT sector. Grow into a product manager and developer role, using AI to build smarter solutions and products. \ud83d\udce3 Tagline Custom Tools . Smarter Pipeliens . Scalable Systems . Coding . Automation \ud83e\uddf0 Available Tools in portfolio Below is the list of currently available tools with quick access to their documentation. Click any tool to view its usage guides and setup instructions : Houdini File Path Manager A powerful and extensible file path auditing and management tool for Houdini artists and technical directors. Houdini Panel ToolBox Houdini Panel ToolBox is a modular, customizable Houdini panel built with PySide2. Project Hierarchy Generator It is a simple, customizable folder structure generator. This documentation hub is always expanding. Check back for updates regurlarly! Note - All these tools are NOT FOR SALE its just for portfolio presentation and documentation.","title":"Getting Started"},{"location":"#what-i-do","text":"Tool Development : Design and deploy automation tools using Python and APIs for platforms like Houdini/Solaris, making day-to-day work more efficient for artists and technical teams. Workflow Automation : Constantly seek ways to simplify and optimize creative and technical pipelines\u2014reducing manual steps, minimizing errors, and scaling productivity. Technical Support/Problem-solving : Serve as a go-to resource for diagnosing and resolving complex technical issues across active shows and projects, ensuring smooth deliveries and happy teams.","title":"\ud83d\ude80 What I Do"},{"location":"#current-interests","text":"Automating creative and technical workflows Exploring API integrations for next-generation pipeline tools Building robust systems for the animation, VFX and IT industry","title":"\ud83d\udca1 Current Interests"},{"location":"#goals-aspirations","text":"Expand my expertise from animation into the broader IT sector. Grow into a product manager and developer role, using AI to build smarter solutions and products.","title":"\ud83c\udf31 Goals &amp; Aspirations"},{"location":"#tagline","text":"Custom Tools . Smarter Pipeliens . Scalable Systems . Coding . Automation","title":"\ud83d\udce3 Tagline"},{"location":"#available-tools-in-portfolio","text":"Below is the list of currently available tools with quick access to their documentation. Click any tool to view its usage guides and setup instructions : Houdini File Path Manager A powerful and extensible file path auditing and management tool for Houdini artists and technical directors. Houdini Panel ToolBox Houdini Panel ToolBox is a modular, customizable Houdini panel built with PySide2. Project Hierarchy Generator It is a simple, customizable folder structure generator. This documentation hub is always expanding. Check back for updates regurlarly!","title":"\ud83e\uddf0 Available Tools in portfolio"},{"location":"#note-all-these-tools-are-not-for-sale-its-just-for-portfolio-presentation-and-documentation","text":"","title":"Note - All these tools are NOT FOR SALE its just for portfolio presentation and documentation."},{"location":"about/","text":"\ud83d\udc4b About Me Hello! I\u2019m the creator and guide behind CodeSutraHub . My journey weaves together advanced lighting and animation technology with the pragmatic world of software automation and AI-driven solutions. \ud83c\udfac Industry Experience Currently, I serve as a Lighting Technical Supervisor at DNEG , blending the art and science of animation with deep technical expertise. Over the years, I\u2019ve architected tools, automated workflows, and streamlined pipelines using Python and diverse APIs. My day-to-day is a blend of technical artistry, engineering best practices, and product-centric thinking. \ud83d\udee0\ufe0f My Tech Philosophy My driving passion is bringing clarity and scale to complex software problems. I believe solutions should be powerful yet simple\u2014much like the Sanskrit concept of a sutra : a concise thread of logic that brings ideas together. Whether automating laborious tasks, building robust APIs, or infusing workflows with AI, I focus on making technology both accessible and transformative. \ud83c\udf31 Always Evolving While my roots are in the animation and VFX industry, I\u2019m continually expanding into new domains: - IT and Software Engineering : Exploring enterprise workflow automation, SaaS, and cloud-native tools. - AI Product Management : Fusing technical mastery with a user-focused product mindset, aspiring to become a world-class product manager and AI developer. - Side Hustles & Collaboration : Open to new opportunities and income streams by leveraging my skills for broader impact. \ud83e\udd1d Let\u2019s Build the Future CodeSutraHub is both a portfolio and a public lab\u2014a space for sharing knowledge, open-source collaboration, and building the next generation of smart tools. If you\u2019re a fellow engineer, developer, or product enthusiast, I invite you to join, contribute, and co-create with me.","title":"About"},{"location":"about/#about-me","text":"Hello! I\u2019m the creator and guide behind CodeSutraHub . My journey weaves together advanced lighting and animation technology with the pragmatic world of software automation and AI-driven solutions.","title":"\ud83d\udc4b About Me"},{"location":"about/#industry-experience","text":"Currently, I serve as a Lighting Technical Supervisor at DNEG , blending the art and science of animation with deep technical expertise. Over the years, I\u2019ve architected tools, automated workflows, and streamlined pipelines using Python and diverse APIs. My day-to-day is a blend of technical artistry, engineering best practices, and product-centric thinking.","title":"\ud83c\udfac Industry Experience"},{"location":"about/#my-tech-philosophy","text":"My driving passion is bringing clarity and scale to complex software problems. I believe solutions should be powerful yet simple\u2014much like the Sanskrit concept of a sutra : a concise thread of logic that brings ideas together. Whether automating laborious tasks, building robust APIs, or infusing workflows with AI, I focus on making technology both accessible and transformative.","title":"\ud83d\udee0\ufe0f My Tech Philosophy"},{"location":"about/#always-evolving","text":"While my roots are in the animation and VFX industry, I\u2019m continually expanding into new domains: - IT and Software Engineering : Exploring enterprise workflow automation, SaaS, and cloud-native tools. - AI Product Management : Fusing technical mastery with a user-focused product mindset, aspiring to become a world-class product manager and AI developer. - Side Hustles & Collaboration : Open to new opportunities and income streams by leveraging my skills for broader impact.","title":"\ud83c\udf31 Always Evolving"},{"location":"about/#lets-build-the-future","text":"CodeSutraHub is both a portfolio and a public lab\u2014a space for sharing knowledge, open-source collaboration, and building the next generation of smart tools. If you\u2019re a fellow engineer, developer, or product enthusiast, I invite you to join, contribute, and co-create with me.","title":"\ud83e\udd1d Let\u2019s Build the Future"},{"location":"HFilePathManager/","text":"Managing external file dependencies in Houdini is complex, error-prone, and can derail project delivery. Our tool solves this by providing comprehensive path auditing, dependency management, and archival features, ensuring every Houdini project remains organized, portable, and production-ready. It is a powerful and extensible file path auditing and management tool for Houdini artists and technical directors. This tool helps you organize, verify, and archive all external file references in a Houdini project with ease. \u2728 Key Features \ud83d\udd0d File Path Discovery Automatically scans and lists all file paths across the current Houdini session. Detects paths in SOPs, LOPs, CHOPs, OBJs, ROPs, and other contexts. Identifies whether a file path is a single frame or a sequence using expression analysis ( $F , $F4 , etc.). \ud83d\udcc2 Open File Location Instantly open the folder containing any file with a single click. \ud83e\udded Select Node in Houdini Automatically select and focus on the node that owns the file path. \ud83d\uddc2 Export Selected Paths Export selected file path data to a clean .json file with full metadata. \ud83d\udce6 Archive Houdini Project Copy all selected external files to a new structured folder. Organizes by file type ( Geometry , Texture , Volume , etc.). Automatically relinks file paths in Houdini to the archived location. Saves a new .hip file with updated paths. \ud83d\udd0e Advanced Filtering Filter by file type (Geometry, Texture, Volume, etc.) Search paths using text input Show/hide paths with missing files ( N/A ) \ud83d\udcbe Detailed File Metadata Shows individual file sizes Displays total size of all selected files Highlights missing or unreadable files in red Includes source context (e.g., SOP , ROP , LOP , etc.) \ud83d\udcf8 Screenshots / Video links Video Demonstration \ud83d\udce6 Installation Houdini Packages Setup Replace DIR_PATH key-value path/to/source/folder with current path of this repo in explorer inside HFilePathManager_tool.json file. Copy the HFilePathManager_tool.json package file inside the same houdini's packages/ directory.: On Windows: C:/Users/<YourName>/Documents/houdiniXX.X/packages/ On Linux: /home/<YourName>/houdiniXX.X/packages/ Launch the Tool Launch Houdini Go to Windows \u2192 Python Panel Click on File Path Manager If all goes well it will show you the panel. \ud83e\udde0 Internals PySide2-based UI using Houdini\u2019s Python API File references collected using recursive hou.node(\"/\") traversal Path rewriting is done with hou.Parm.set() Supports encrypted deployment using PyArmor or Cython Modular code structure with clean separation of UI and logic Portfolio link - https://github.com/thecodeshastra Note this is just for technical documentation presentation, NOT FOR SALE","title":"Houdini FilePath Manager"},{"location":"HFilePathManager/#key-features","text":"\ud83d\udd0d File Path Discovery Automatically scans and lists all file paths across the current Houdini session. Detects paths in SOPs, LOPs, CHOPs, OBJs, ROPs, and other contexts. Identifies whether a file path is a single frame or a sequence using expression analysis ( $F , $F4 , etc.). \ud83d\udcc2 Open File Location Instantly open the folder containing any file with a single click. \ud83e\udded Select Node in Houdini Automatically select and focus on the node that owns the file path. \ud83d\uddc2 Export Selected Paths Export selected file path data to a clean .json file with full metadata. \ud83d\udce6 Archive Houdini Project Copy all selected external files to a new structured folder. Organizes by file type ( Geometry , Texture , Volume , etc.). Automatically relinks file paths in Houdini to the archived location. Saves a new .hip file with updated paths. \ud83d\udd0e Advanced Filtering Filter by file type (Geometry, Texture, Volume, etc.) Search paths using text input Show/hide paths with missing files ( N/A ) \ud83d\udcbe Detailed File Metadata Shows individual file sizes Displays total size of all selected files Highlights missing or unreadable files in red Includes source context (e.g., SOP , ROP , LOP , etc.)","title":"\u2728 Key Features"},{"location":"HFilePathManager/#screenshots-video-links","text":"Video Demonstration","title":"\ud83d\udcf8 Screenshots / Video links"},{"location":"HFilePathManager/#installation","text":"Houdini Packages Setup Replace DIR_PATH key-value path/to/source/folder with current path of this repo in explorer inside HFilePathManager_tool.json file. Copy the HFilePathManager_tool.json package file inside the same houdini's packages/ directory.: On Windows: C:/Users/<YourName>/Documents/houdiniXX.X/packages/ On Linux: /home/<YourName>/houdiniXX.X/packages/ Launch the Tool Launch Houdini Go to Windows \u2192 Python Panel Click on File Path Manager If all goes well it will show you the panel.","title":"\ud83d\udce6 Installation"},{"location":"HFilePathManager/#internals","text":"PySide2-based UI using Houdini\u2019s Python API File references collected using recursive hou.node(\"/\") traversal Path rewriting is done with hou.Parm.set() Supports encrypted deployment using PyArmor or Cython Modular code structure with clean separation of UI and logic Portfolio link - https://github.com/thecodeshastra","title":"\ud83e\udde0 Internals"},{"location":"HFilePathManager/#note-this-is-just-for-technical-documentation-presentation-not-for-sale","text":"","title":"Note this is just for technical documentation presentation, NOT FOR SALE"},{"location":"HPanelToolBox/","text":"HPanelToolBox is a modular, customizable Houdini panel built with PySide2. It offers reusable group boxes that streamline artist workflows by integrating template loading, tool execution, and more custom UI utilities into a single panel. Designed for flexibility and future upgrades, this panel can be extended with new group boxes as per project needs. \u2728 Key Features \ud83e\udde0 Template Loaders Auto-Generated Names \u2013 Reads template files and generates dropdowns. JSON-Based Loader \u2013 Loads versioned templates from a configuration file. \ud83d\udce6 Modular Architecture \u2013 Each tool group is isolated and independently reusable, also we can more groupboxes with more tools. \u2699\ufe0f Developer-Ready \u2013 Clean PySide2 architecture, extendable with minimal changes. \ud83e\uddf0 Custom Tool Buttons \u2013 Easily add helper or project-specific scripts. \ud83d\uddbc\ufe0f Houdini Panel Ready \u2013 Designed to be dropped into a Python Panel tab. \ud83d\udcf8 Screenshots / Video links Video Demonstration \ud83d\udce6 Installation Houdini Packages Setup Replace DIR_PATH key-value path/to/source/folder with current path of this repo in explorer inside HPanelToolBox_tool.json file. Copy the HPanelToolBox_tool.json package file inside the same houdini's packages/ directory.: On Windows: C:/Users/<YourName>/Documents/houdiniXX.X/packages/ On Linux: /home/<YourName>/houdiniXX.X/packages/ Launch the Tool Launch Houdini Go to Windows \u2192 Python Panel Click on Houdini ToolBox If all goes well it will show you the panel. \ud83d\udda5\ufe0f Default Included Modules TemplateLoaderA : Auto-generates template names from a directory. TemplateLoaderB : Loads structured templates via a JSON file. Portfolio link - https://github.com/thecodeshastra Note this is just for technical documentation presentation, NOT FOR SALE","title":"Houdini Panel ToolBox"},{"location":"HPanelToolBox/#key-features","text":"\ud83e\udde0 Template Loaders Auto-Generated Names \u2013 Reads template files and generates dropdowns. JSON-Based Loader \u2013 Loads versioned templates from a configuration file. \ud83d\udce6 Modular Architecture \u2013 Each tool group is isolated and independently reusable, also we can more groupboxes with more tools. \u2699\ufe0f Developer-Ready \u2013 Clean PySide2 architecture, extendable with minimal changes. \ud83e\uddf0 Custom Tool Buttons \u2013 Easily add helper or project-specific scripts. \ud83d\uddbc\ufe0f Houdini Panel Ready \u2013 Designed to be dropped into a Python Panel tab.","title":"\u2728 Key Features"},{"location":"HPanelToolBox/#screenshots-video-links","text":"Video Demonstration","title":"\ud83d\udcf8 Screenshots / Video links"},{"location":"HPanelToolBox/#installation","text":"Houdini Packages Setup Replace DIR_PATH key-value path/to/source/folder with current path of this repo in explorer inside HPanelToolBox_tool.json file. Copy the HPanelToolBox_tool.json package file inside the same houdini's packages/ directory.: On Windows: C:/Users/<YourName>/Documents/houdiniXX.X/packages/ On Linux: /home/<YourName>/houdiniXX.X/packages/ Launch the Tool Launch Houdini Go to Windows \u2192 Python Panel Click on Houdini ToolBox If all goes well it will show you the panel.","title":"\ud83d\udce6 Installation"},{"location":"HPanelToolBox/#default-included-modules","text":"TemplateLoaderA : Auto-generates template names from a directory. TemplateLoaderB : Loads structured templates via a JSON file. Portfolio link - https://github.com/thecodeshastra","title":"\ud83d\udda5\ufe0f Default Included Modules"},{"location":"HPanelToolBox/#note-this-is-just-for-technical-documentation-presentation-not-for-sale","text":"","title":"Note this is just for technical documentation presentation, NOT FOR SALE"},{"location":"ProjectHierarchyGenerator/","text":"ProjectHierarchyGenerator is a simple, customizable folder structure generator designed for freelancers and small studios to help maintain a clean, consistent, and uniform project hierarchy \u2014 all with a single click. It handles all Assets, sequences and shots hierarchy internally. \ud83d\ude80 Features \u2705 One-click project hierarchy creation \ud83d\udd04 JSON-based structure definition \u2013 Easily update the hierarchy by editing a single JSON file. \ud83e\udde0 Smart regeneration \u2013 Works on existing projects without overwriting valid existing folders. \u23f1\ufe0f Time-saving \u2013 Drastically reduces setup time for new projects. \ud83e\udd1d Team-friendly \u2013 Ensures consistent structure across all artists and teams. \ud83d\udee0 How It Works Reads your folder structure from a customizable JSON file. Automatically generates the entire folder tree. Checks for existing folders and avoids duplication. Allows easy updates \u2013 just modify the JSON and rerun the tool. \ud83d\udcf8 Screenshots / Video links \u2705 Ideal For Freelancers managing multiple client folders. Small to mid-size studios wanting consistency. Educational setups for teaching clean project management. How to use it Steps to create hierarchy - Copy project_hierarchy.bat to the new shared drive created in your google workspace - Then double click on that .bat file and it will create all the project folders for you Steps to modify hierarchy - If you want to change anything in hierarchy just update project_hierarchy.json for main folders. - And for each asset and shot hierarchy we need to modify assets_hierarchy.json and shots_hierarchy.json respectively. - Those json files are preety straight forward for root folder just change the root key value, for main folder change name key value and for subfolders change the name inside subfolder list. - We can also add copy_files keys if we want to copy some basic files by default to any folder created. Location to change drive path - All assets_hierarchy.bat, shots_hierarchy.bat, sequence_hierarchy.bat and project_hierarchy.bat files have 2 location to change. - First is project root and second is file path either powershell or cs exe. Portfolio link - https://github.com/thecodeshastra Note this is just for technical documentation presentation, NOT FOR SALE","title":"Project Hierarchy Generator"},{"location":"ProjectHierarchyGenerator/#features","text":"\u2705 One-click project hierarchy creation \ud83d\udd04 JSON-based structure definition \u2013 Easily update the hierarchy by editing a single JSON file. \ud83e\udde0 Smart regeneration \u2013 Works on existing projects without overwriting valid existing folders. \u23f1\ufe0f Time-saving \u2013 Drastically reduces setup time for new projects. \ud83e\udd1d Team-friendly \u2013 Ensures consistent structure across all artists and teams.","title":"\ud83d\ude80 Features"},{"location":"ProjectHierarchyGenerator/#how-it-works","text":"Reads your folder structure from a customizable JSON file. Automatically generates the entire folder tree. Checks for existing folders and avoids duplication. Allows easy updates \u2013 just modify the JSON and rerun the tool.","title":"\ud83d\udee0 How It Works"},{"location":"ProjectHierarchyGenerator/#screenshots-video-links","text":"","title":"\ud83d\udcf8 Screenshots / Video links"},{"location":"ProjectHierarchyGenerator/#ideal-for","text":"Freelancers managing multiple client folders. Small to mid-size studios wanting consistency. Educational setups for teaching clean project management.","title":"\u2705 Ideal For"},{"location":"ProjectHierarchyGenerator/#how-to-use-it","text":"Steps to create hierarchy - Copy project_hierarchy.bat to the new shared drive created in your google workspace - Then double click on that .bat file and it will create all the project folders for you Steps to modify hierarchy - If you want to change anything in hierarchy just update project_hierarchy.json for main folders. - And for each asset and shot hierarchy we need to modify assets_hierarchy.json and shots_hierarchy.json respectively. - Those json files are preety straight forward for root folder just change the root key value, for main folder change name key value and for subfolders change the name inside subfolder list. - We can also add copy_files keys if we want to copy some basic files by default to any folder created. Location to change drive path - All assets_hierarchy.bat, shots_hierarchy.bat, sequence_hierarchy.bat and project_hierarchy.bat files have 2 location to change. - First is project root and second is file path either powershell or cs exe. Portfolio link - https://github.com/thecodeshastra","title":"How to use it"},{"location":"ProjectHierarchyGenerator/#note-this-is-just-for-technical-documentation-presentation-not-for-sale","text":"","title":"Note this is just for technical documentation presentation, NOT FOR SALE"}]}